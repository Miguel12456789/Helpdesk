<!DOCTYPE html>
<html lang="pt-pt">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="base_gov.css">
    <!-- Include Lucide icons -->
    <script src="https://unpkg.com/lucide@latest"></script>
    <title>Helpdesk Público</title>
</head>

<body>
    <main class="container py-8">
        <h1 class="titulo">Mercado Público</h1>
        <div class="banner">
            <p>
                Bem-vindos à página de estatísticas do Helpdesk Público. <br>
                Aqui encontra toda a informação pública sobre os Contratos de Compras Públicas. <br>
                Consulte todas as informações sobre os Contratos Públicos de forma mais ágil e prática. <br>

            </p>
        </div>

        <div class="info-box">
            <p>Nos campos de seleção disponíveis deve selecionar as opções pretendidas para realizar a sua pesquisa,
                quanto maior for a seleção de campos mais reduzida será a lista de resultados.</p>
            <p>Pode realizar qualquer tipo de seleção, seja um objeto ou um espaço temporal, ou os dois.

                Caso não encontre o resultado desejado, reinicie a página e se possível elimine os cookies.

                Caso tenha dificuldade e necessite de suporte, regresse à página inicial das estatísticas e procure
                suporte na janela do chat ou através dos contactos disponibilizados no nosso website.</p>
        </div>

        <div class="search-container">
            <div class="search-row">
                <div class="dropdown" id="contracts-dropdown">
                    <button id="dropdown-button" class="dropdown-select" aria-haspopup="true" aria-expanded="false">
                        <span class="dropdown-text" id="selected-contract">Contrato</span>
                        <i data-lucide="chevron-down" class="dropdown-icon"></i>
                    </button>

                    <div class="dropdown-menu" id="dropdown-menu">
                        <div class="dropdown-item" data-value="Contrato">Contrato</div>
                        <div class="dropdown-item" data-value="Entidades">Entidades</div>
                        <div class="dropdown-item" data-value="Modificações contratuais">Modificações contratuais</div>
                        <div class="dropdown-item" data-value="Bens móveis">Bens móveis</div>
                        <div class="dropdown-item" data-value="Não Celebrações de contrato">Não Celebrações de contrato
                        </div>
                        <div class="dropdown-item" data-value="Impugnação">Impugnação</div>
                    </div>
                </div>

                <input type="text" placeholder="Pesquisar pelo objeto do Contrato" class="search-input" />
                <button class="search-button">
                    <i data-lucide="search" class="icon-small"></i>
                    <span>Pesquisar</span>
                </button>
            </div>

            <!-- Advanced Search Form -->
            <div id="advanced-search-form" class="advanced-search-form">
                <div class="form-content">
                    <!-- First Row -->
                    <div class="form-row">
                        <div class="form-group">
                            <input type="checkbox" id="special-measures" class="form-checkbox" />
                            <label for="special-measures" class="form-label">
                                Medidas especiais
                            </label>
                        </div>

                        <div class="form-group">
                            <input type="checkbox" id="include-mec" class="form-checkbox" />
                            <label for="include-mec" class="form-label">
                                Incluir MEC ao abrigo do CCP
                            </label>
                        </div>

                        <div class="form-field">
                            <label for="measure-type" class="form-label">
                                Tipologia da medida especial
                            </label>
                            <select id="measure-type" class="form-select">
                                <option>Todos</option>
                                <option>Opção 1</option>
                                <option>Opção 2</option>
                            </select>
                        </div>
                    </div>

                    <hr class="form-divider" />

                    <!-- Second Row -->
                    <div class="form-row">
                        <div class="form-field">
                            <label for="procedure-type" class="form-label">
                                Tipo de Procedimento
                            </label>
                            <select id="procedure-type" class="form-select">
                                <option value="0">Todos</option>
                                <option value="8">Consulta Prévia</option>
                                <option value="1">Ajuste Direto Regime Geral</option>
                                <option value="2">Concurso público</option>
                                <option value="3">Concurso limitado por prévia qualificação</option>
                                <option value="4">Procedimento de negociação</option>
                                <option value="5">Diálogo concorrencial</option>
                                <option value="6">Ao abrigo de acordo-quadro (art.º 258.º)</option>
                                <option value="7">Ao abrigo de acordo-quadro (art.º 259.º)</option>
                                <option value="9">Parceria para a inovação</option>
                                <option value="10">Disponibilização de bens móveis</option>
                                <option value="11">Serviços sociais e outros serviços específicos</option>
                                <option value="13">Concurso de conceção simplificado</option>
                                <option value="14">Concurso de ideias simplificado</option>
                                <option value="15">Consulta Prévia Simplificada</option>
                                <option value="16">Concurso público simplificado</option>
                                <option value="17">Concurso limitado por prévia qualificação simplificado</option>
                                <option value="18">Ajuste Direto Regime Geral ao abrigo do artigo 7º da Lei n.º
                                    30/2021, de 21.05</option>
                                <option value="19">Consulta prévia ao abrigo do artigo 7º da Lei n.º 30/2021, de
                                    21.05</option>
                                <option value="20">Ajuste direto simplificado</option>
                                <option value="21">Ajuste direto simplificado ao abrigo da Lei n.º 30/2021, de 21.05
                                </option>
                                <option value="22">Setores especiais – isenção parte II</option>
                                <option value="23">Contratação excluída II</option>
                            </select>
                        </div>

                        <div class="form-field">
                            <label for="entity" class="form-label">
                                Entidade Adjudicante
                            </label>
                            <input type="text" id="entity" class="form-input" />
                        </div>
                    </div>

                    <!-- Third Row -->
                    <div class="form-row">
                        <div class="form-field">
                            <label for="contract-type" class="form-label">
                                Tipo de Contrato
                            </label>
                            <select id="contract-type" class="form-select">
                                <option value="0">Todos</option>
                                <option value="1">Aquisição de bens móveis</option>
                                <option value="2">Aquisição de serviços</option>
                                <option value="3">Concessão de obras públicas</option>
                                <option value="4">Concessão de serviços públicos</option>
                                <option value="5">Empreitadas de obras públicas</option>
                                <option value="6">Locação de bens móveis</option>
                                <option value="7">Sociedade</option>
                                <option value="8">Outros</option>
                            </select>
                        </div>

                        <div class="form-field">
                            <label for="awarded-entity" class="form-label">
                                Entidade Adjudicatária
                            </label>
                            <input type="text" id="awarded-entity" class="form-input" />
                        </div>
                    </div>

                    <!-- Fourth Row -->
                    <div class="form-row">
                        <div class="form-field">
                            <label for="cpv" class="form-label">
                                CPV
                            </label>
                            <input type="text" id="cpv" class="form-input" />
                        </div>

                        <div class="form-group">
                            <input type="checkbox" id="environmental-criteria" class="form-checkbox" />
                            <label for="environmental-criteria" class="form-label">
                                Critérios ambientais
                            </label>
                        </div>
                    </div>

                    <!-- Fifth Row - Dates and Location -->
                    <div class="form-row">
                        <div class="form-field date-container">
                            <label for="date-type" class="form-label">
                                Datas
                            </label>
                            <select id="date-type" class="form-select">
                                <option>Data do Contrato</option>
                                <option>Data de Publicação</option>
                                <option>Data de Fecho</option>
                            </select>

                            <div class="date-range">
                                <div class="date-field">
                                    <label for="date-from" class="form-label">De:</label>
                                    <div class="date-selects">
                                        <select id="from-year" class="date-select"></select>
                                        <select id="from-month" class="date-select"></select>
                                        <select id="from-day" class="date-select"></select>
                                    </div>
                                </div>

                                <div class="date-field">
                                    <label for="date-to" class="form-label">Até:</label>
                                    <div class="date-selects">
                                        <select id="to-year" class="date-select"></select>
                                        <select id="to-month" class="date-select"></select>
                                        <select id="to-day" class="date-select"></select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-field location-container">
                            <label class="form-label">
                                Local de Execução (País, Distrito, Concelho)
                            </label>
                            <select class="form-select location-select">
                                <option>Todos</option>
                                <option>Portugal</option>
                                <option>Espanha</option>
                            </select>
                            <select class="form-select location-select">
                                <option>Todos</option>
                                <option>Lisboa</option>
                                <option>Porto</option>
                                <option>Faro</option>
                            </select>
                            <select class="form-select location-select">
                                <option>Todos</option>
                                <option>Lisboa</option>
                                <option>Cascais</option>
                                <option>Sintra</option>
                            </select>
                        </div>
                    </div>

                    <!-- Form Buttons -->
                    <div class="form-buttons">
                        <button id="clear-form-btn" class="clear-button">
                            <i data-lucide="x" class="icon-small"></i>
                            <span>LIMPAR</span>
                        </button>
                        <button class="submit-button">
                            <i data-lucide="search" class="icon-small"></i>
                            <span>PESQUISAR</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- Overlay e Popup -->
        <div class="overlay" id="overlay">
            <div class="popup">
                <button class="close-btn" id="closeBtn">&times;</button>
                <h2 class="popup-title">Formulário de Download</h2>

                <form id="downloadForm">
                    <!-- Nome -->
                    <div class="form-group">
                        <label for="nome" class="form-label">Nome</label>
                        <input type="text" id="nome" name="nome" class="form-input" required>
                    </div>

                    <!-- Sobrenome -->
                    <div class="form-group">
                        <label for="sobrenome" class="form-label">Sobrenome</label>
                        <input type="text" id="sobrenome" name="sobrenome" class="form-input" required>
                    </div>

                    <!-- E-mail Profissional -->
                    <div class="form-group">
                        <label for="email" class="form-label">E-mail Profissional</label>
                        <input type="email" id="email" name="email" class="form-input" required>
                    </div>

                    <!-- Telefone Profissional -->
                    <div class="form-group">
                        <label for="telefone" class="form-label">Telefone Profissional</label>
                        <input type="tel" id="telefone" name="telefone" class="form-input" required>
                    </div>

                    <!-- Setor de Atividade Profissional -->
                    <div class="form-group">
                        <label for="setor" class="form-label">Setor de Atividade Profissional</label>
                        <select id="setor" name="setor" class="form-select" required>
                            <option value="" disabled selected>Selecione um setor</option>
                            <option value="01">01 - Agricultura, produção animal, caça e atividades dos serviços
                                relacionados</option>
                            <option value="02">02 - Silvicultura e exploração florestal</option>
                            <option value="03">03 - Pesca e aquicultura</option>
                            <option value="05">05 - Extração de hulha e lenhite</option>
                            <option value="06">06 - Extração de petróleo bruto e gás natural</option>
                            <option value="07">07 - Extração e preparação de minérios metálicos</option>
                            <option value="08">08 - Outras indústrias extrativas</option>
                            <option value="09">09 - Atividades dos serviços relacionados com as indústrias extrativas
                            </option>
                            <option value="10">10 - Indústrias alimentares</option>
                        </select>
                    </div>

                    <!-- Formato de Download -->
                    <div class="form-group">
                        <label class="form-label">Em que formato pretende efetuar o download:</label>
                        <div class="format-options">
                            <div class="format-option">
                                <input type="radio" id="formatCsv" name="formato" value="csv" class="format-radio"
                                    required checked>
                                <label for="formatCsv">CSV</label>
                            </div>
                            <div class="format-option">
                                <input type="radio" id="formatXls" name="formato" value="xls" class="format-radio">
                                <label for="formatXls">XLS</label>
                            </div>
                            <div class="format-option">
                                <input type="radio" id="formatCsvSep" name="formato" value="csv-sep"
                                    class="format-radio">
                                <label for="formatCsvSep">PDF</label>
                            </div>
                        </div>
                    </div>

                    <button type="button" id="downloadBtn" class="submit-btn">Fazer Download</button>
                </form>
            </div>
        </div>

        <!-- Popup de CAPTCHA (adicione este código FORA do overlay principal, logo após o fechamento da div overlay) -->
        <div class="overlay captcha-popup" id="captchaOverlay">
            <div class="popup verification-popup">
                <div class="popup-header">
                    <h2 class="popup-title">Verificação de Segurança</h2>
                    <button class="close-btn" id="closeCaptchaBtn">&times;</button>
                </div>

                <div class="popup-body">
                    <div class="info-box">
                        <p>Enviamos um código de verificação para o seu e-mail.</p>
                        <p>Por favor, verifique sua caixa de entrada e insira o código de 6 dígitos abaixo para
                            continuar.</p>
                    </div>

                    <div class="form-group">
                        <label for="verification-code" class="form-label">Código de Verificação</label>
                        <div class="code-input-container">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric"
                                autocomplete="one-time-code">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric">
                            <input type="text" class="code-input" maxlength="1" pattern="[0-9]" inputmode="numeric">
                        </div>

                        <div class="timer">
                            Código válido por <span id="countdown">05:00</span>
                            <a class="resend-link" id="resendLink">Reenviar código</a>
                        </div>
                    </div>

                    <button class="verify-btn" id="verifyBtn" disabled>
                        Verificar
                    </button>
                </div>
            </div>
        </div>

                    <button type="submit" class="submit-btn">Fazer Download</button>
                </form>
            </div>
        </div>
    </main>
    <%- include('components/tab_base') %>
        <%- include('components/detalhes') %>
            <%- include('components/mail_receive') %>
                <%- include('components/button') %>

                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            // Elementos do DOM
                            const openPopupBtn = document.getElementById('openPopupBtn');
                            const overlay = document.getElementById('overlay');
                            const captchaOverlay = document.getElementById('captchaOverlay');
                            const downloadBtn = document.getElementById('downloadBtn');
                            const closeBtn = document.getElementById('closeBtn');
                            const closeCaptchaBtn = document.getElementById('closeCaptchaBtn');
                            const verifyBtn = document.getElementById('verifyBtn');
                            const downloadForm = document.getElementById('downloadForm');
                            const emailInput = document.getElementById('email');

                            // Abrir o popup de download quando o link "Clique aqui" for clicado
                            if (openPopupBtn) {
                                openPopupBtn.addEventListener('click', function (e) {
                                    e.preventDefault(); // Previne o comportamento padrão do link
                                    overlay.style.display = 'flex';
                                    document.body.style.overflow = 'hidden'; // Impedir rolagem do body
                                });
                            }

                            // Fechar o popup de download
                            if (closeBtn) {
                                closeBtn.addEventListener('click', function () {
                                    overlay.style.display = 'none';
                                    document.body.style.overflow = 'auto'; // Permitir rolagem do body
                                });
                            }

                            // Mostrar popup de CAPTCHA quando o botão de download for clicado
                            if (downloadBtn) {
                                downloadBtn.addEventListener('click', function (e) {
                                    e.preventDefault();

                                    // Verificar se o formulário é válido
                                    if (downloadForm.checkValidity()) {
                                        // Ocultar o popup de download
                                        overlay.style.display = 'none';

                                        // Mostrar o popup de CAPTCHA
                                        captchaOverlay.style.display = 'flex';

                                        // Simulação de envio de email com código de verificação
                                        console.log(`Código de verificação enviado para: ${emailInput.value}`);
                                    } else {
                                        // Forçar a validação do formulário para mostrar mensagens de erro
                                        downloadForm.reportValidity();
                                    }
                                });
                            }

                            // Fechar popup de CAPTCHA
                            if (closeCaptchaBtn) {
                                closeCaptchaBtn.addEventListener('click', function () {
                                    captchaOverlay.style.display = 'none';
                                    document.body.style.overflow = 'auto'; // Permitir rolagem do body
                                });
                            }

                            // Verificar código CAPTCHA
                            if (verifyBtn) {
                                verifyBtn.addEventListener('click', function () {
                                    const captchaInput = document.getElementById('captcha');

                                    if (captchaInput.value.trim() === '') {
                                        alert('Por favor, insira o código de verificação.');
                                    } else {
                                        // Simulação de verificação bem-sucedida
                                        alert('Código verificado com sucesso! Seu download começará em instantes.');
                                        captchaOverlay.style.display = 'none';
                                        document.body.style.overflow = 'auto'; // Permitir rolagem do body

                                        // Aqui você pode adicionar a lógica real para iniciar o download

                                        // Opcional: fechar também a notificação após o download
                                        const notificacaoContainer = document.getElementById('notificacao-container');
                                        if (notificacaoContainer) {
                                            notificacaoContainer.style.display = 'none';
                                        }
                                    }
                                });
                            }

                            // Fechar os popups ao clicar fora deles
                            window.addEventListener('click', function (e) {
                                if (e.target === overlay) {
                                    overlay.style.display = 'none';
                                    document.body.style.overflow = 'auto';
                                }
                                if (e.target === captchaOverlay) {
                                    captchaOverlay.style.display = 'none';
                                    document.body.style.overflow = 'auto';
                                }
                            });
                        });
                        // Certifique-se de que este código esteja no seu arquivo JavaScript ou dentro de uma tag <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            // Elementos do DOM
                            const downloadBtn = document.getElementById('downloadBtn');
                            const closeDownloadBtn = document.getElementById('closeBtn');
                            const closeCaptchaBtn = document.getElementById('closeCaptchaBtn');
                            const verifyBtn = document.getElementById('verifyBtn');
                            const downloadForm = document.getElementById('downloadForm');
                            const emailInput = document.getElementById('email');
                            const overlay = document.getElementById('overlay');
                            const captchaOverlay = document.getElementById('captchaOverlay');

                            // Mostrar popup de CAPTCHA quando o botão de download for clicado
                            if (downloadBtn) {
                                downloadBtn.addEventListener('click', function (e) {
                                    e.preventDefault();

                                    // Verificar se o formulário é válido
                                    if (downloadForm.checkValidity()) {
                                        // Ocultar o popup de download
                                        overlay.style.display = 'none';

                                        // Mostrar o popup de CAPTCHA
                                        captchaOverlay.style.display = 'flex';

                                        // Simulação de envio de email com código de verificação
                                        console.log(`Código de verificação enviado para: ${emailInput.value}`);
                                    } else {
                                        // Forçar a validação do formulário para mostrar mensagens de erro
                                        downloadForm.reportValidity();
                                    }
                                });
                            }

                            // Fechar popup de CAPTCHA
                            if (closeCaptchaBtn) {
                                closeCaptchaBtn.addEventListener('click', function () {
                                    captchaOverlay.style.display = 'none';
                                });
                            }

                            // Verificar código CAPTCHA
                            if (verifyBtn) {
                                verifyBtn.addEventListener('click', function () {
                                    const captchaInput = document.getElementById('captcha');

                                    if (captchaInput.value.trim() === '') {
                                        alert('Por favor, insira o código de verificação.');
                                    } else {
                                        // Simulação de verificação bem-sucedida
                                        alert('Código verificado com sucesso! Seu download começará em instantes.');
                                        captchaOverlay.style.display = 'none';

                                        // Aqui você pode adicionar a lógica real para iniciar o download
                                    }
                                });
                            }
                        });
                        document.addEventListener('DOMContentLoaded', function () {
                            // === Função para preencher anos, meses e dias dinamicamente ===
                            function populateDateSelectors(yearId, monthId, dayId) {
                                const yearSelect = document.getElementById(yearId);
                                const monthSelect = document.getElementById(monthId);
                                const daySelect = document.getElementById(dayId);

                                const currentYear = new Date().getFullYear();

                                // Placeholder
                                yearSelect.innerHTML = '<option disabled selected>Ano:</option>';
                                monthSelect.innerHTML = '<option disabled selected>Mês:</option>';
                                daySelect.innerHTML = '<option disabled selected>Dia:</option>';

                                // Preenche anos (ex: 1900 até atual)
                                for (let y = currentYear; y >= 1900; y--) {
                                    const option = document.createElement('option');
                                    option.value = y;
                                    option.text = y;
                                    yearSelect.appendChild(option);
                                }

                                // Preenche meses (1 a 12)
                                for (let m = 1; m <= 12; m++) {
                                    const option = document.createElement('option');
                                    option.value = m;
                                    option.text = m.toString().padStart(2, '0');
                                    monthSelect.appendChild(option);
                                }

                                // Atualiza os dias com base no ano e mês
                                function updateDays() {
                                    const year = parseInt(yearSelect.value);
                                    const month = parseInt(monthSelect.value);

                                    if (!year || !month) return;

                                    const daysInMonth = new Date(year, month, 0).getDate();
                                    daySelect.innerHTML = '<option disabled selected>Dia:</option>';

                                    for (let d = 1; d <= daysInMonth; d++) {
                                        const option = document.createElement('option');
                                        option.value = d;
                                        option.text = d.toString().padStart(2, '0');
                                        daySelect.appendChild(option);
                                    }
                                }

                                yearSelect.addEventListener('change', updateDays);
                                monthSelect.addEventListener('change', updateDays);

                                // Inicializar selects com o ano atual e mês 1
                                yearSelect.value = currentYear;
                                monthSelect.value = 1;
                                updateDays();
                            }

                            // === Inicializar selects de data para "De" e "Até" ===
                            populateDateSelectors('from-year', 'from-month', 'from-day');
                            populateDateSelectors('to-year', 'to-month', 'to-day');

                            // Initialize Lucide icons
                            if (typeof lucide === 'undefined') {
                                console.warn('Lucide is not globally defined. Ensure Lucide library is properly included.');
                                window.lucide = { createIcons: function () { } };
                            }
                            lucide.createIcons();

                            // Clear button functionality
                            const clearBtn = document.getElementById('clear-form-btn');

                            clearBtn.addEventListener('click', function () {
                                // Reset all form inputs
                                const inputs = advancedSearchForm.querySelectorAll('input');
                                const selects = advancedSearchForm.querySelectorAll('select');

                                inputs.forEach(function (input) {
                                    if (input.type === 'checkbox') {
                                        input.checked = false;
                                    } else {
                                        input.value = '';
                                    }
                                });

                                selects.forEach(function (select) {
                                    select.selectedIndex = 0;
                                });
                            });

                            // Search button functionality
                            const searchBtn = document.querySelector('.submit-button');

                            searchBtn.addEventListener('click', function () {
                                // Collect form data and submit
                                console.log('Advanced search submitted');
                                const formData = {
                                    specialMeasures: document.getElementById('special-measures').checked,
                                    includeMec: document.getElementById('include-mec').checked,
                                    measureType: document.getElementById('measure-type').value,
                                    procedureType: document.getElementById('procedure-type').value,
                                    entity: document.getElementById('entity').value,
                                    contractType: document.getElementById('contract-type').value,
                                    awardedEntity: document.getElementById('awarded-entity').value,
                                    cpv: document.getElementById('cpv').value,
                                    environmentalCriteria: document.getElementById('environmental-criteria').checked,
                                    dateType: document.getElementById('date-type').value,
                                };

                                console.log('Form data:', formData);
                            });

                            // Mostrar tabela de resultados quando os botões de pesquisa são clicados
                            const searchButtons = document.querySelectorAll('.search-button, .submit-button');
                            const resultsTable = document.getElementById('results-table');
                            const notificationContainer = document.getElementById('notificacao-container');

                            searchButtons.forEach(button => {
                                button.addEventListener('click', function () {
                                    if (resultsTable) {
                                        resultsTable.style.display = 'block';
                                        resultsTable.scrollIntoView({ behavior: 'smooth' });
                                    }

                                    if (notificationContainer) {
                                        notificationContainer.style.display = 'block';
                                    }
                                });
                            });

                            // Controle de visibilidade do container principal de detalhes
                            const detailsButtons = document.querySelectorAll('.details-button');
                            const contractDetails = document.querySelectorAll('.contract-details');
                            const closeButtons = document.querySelectorAll('.close-details');

                            contractDetails.forEach(detail => {
                                detail.style.display = 'none';
                            });

                            detailsButtons.forEach(button => {
                                button.addEventListener('click', function () {
                                    const contractId = this.getAttribute('data-contract-id');
                                    const mainContainer = document.getElementById('main-container');
                                    if (mainContainer) {
                                        mainContainer.style.display = 'block';
                                    }

                                    const detailsElement = document.getElementById(`details-${contractId}`);
                                    if (!detailsElement) return;

                                    contractDetails.forEach(detail => {
                                        if (detail.id !== `details-${contractId}`) {
                                            detail.style.display = 'none';
                                        }
                                    });

                                    detailsElement.style.display = 'block';

                                    const icon = this.querySelector('i');
                                    if (icon) {
                                        icon.classList.remove('fa-plus-circle');
                                        icon.classList.add('fa-minus-circle');
                                    }

                                    if (mainContainer) {
                                        mainContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });
                                    }
                                });
                            });

                            closeButtons.forEach(button => {
                                button.addEventListener('click', function () {
                                    const contractId = this.getAttribute('data-contract-id');
                                    const mainContainer = document.getElementById('main-container');
                                    if (mainContainer) {
                                        mainContainer.style.display = 'none';
                                    }

                                    const detailsButton = document.querySelector(`.details-button[data-contract-id="${contractId}"]`);
                                    if (detailsButton) {
                                        const icon = detailsButton.querySelector('i');
                                        if (icon) {
                                            icon.classList.remove('fa-minus-circle');
                                            icon.classList.add('fa-plus-circle');
                                        }
                                    }

                                    const resultsTable = document.querySelector('.results-table');
                                    if (resultsTable) {
                                        resultsTable.scrollIntoView({ behavior: 'smooth', block: 'start' });
                                    }
                                });
                            });

                            detailsButtons.forEach(button => {
                                button.addEventListener('keydown', function (e) {
                                    if (e.key === 'Enter' || e.key === ' ') {
                                        e.preventDefault();
                                        this.click();
                                    }
                                });
                            });

                            closeButtons.forEach(button => {
                                button.addEventListener('keydown', function (e) {
                                    if (e.key === 'Enter' || e.key === ' ') {
                                        e.preventDefault();
                                        this.click();
                                    }
                                });
                            });

                            // Elementos do DOM
                            const openPopupBtn = document.getElementById('openPopupBtn');
                            const closeBtn = document.getElementById('closeBtn');
                            const overlay = document.getElementById('overlay');

                            // Abrir o popup
                            openPopupBtn.addEventListener('click', function () {
                                overlay.style.display = 'flex';
                                document.body.style.overflow = 'hidden'; // Impedir rolagem do body
                            });

                            // Fechar o popup
                            closeBtn.addEventListener('click', function () {
                                overlay.style.display = 'none';
                                document.body.style.overflow = 'auto'; // Permitir rolagem do body
                            });

                            // Fechar o popup ao clicar fora dele
                            overlay.addEventListener('click', function (e) {
                                if (e.target === overlay) {
                                    overlay.style.display = 'none';
                                    document.body.style.overflow = 'auto'; // Permitir rolagem do body
                                }
                            });
                        });
                    </script>
</body>

</html>